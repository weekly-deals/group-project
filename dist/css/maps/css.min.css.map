{"version":3,"sources":["first.styl","first.css","../node_modules/rupture/rupture/index.styl"],"names":[],"mappings":"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","file":"css.min.css","sourcesContent":[null,"/** Ultra Light */\n@font-face {\n  font-family: \"San Francisco\";\n  font-weight: 100;\n  src: url(\"https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-ultralight-webfont.woff\");\n}\n/** Thin */\n@font-face {\n  font-family: \"San Francisco\";\n  font-weight: 200;\n  src: url(\"https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-thin-webfont.woff\");\n}\n/** Regular */\n@font-face {\n  font-family: \"San Francisco\";\n  font-weight: 400;\n  src: url(\"https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-regular-webfont.woff\");\n}\n[ng:cloak],\n[ng-cloak],\n[data-ng-cloak],\n[x-ng-cloak],\n.ng-cloak,\n.x-ng-cloak {\n  display: none !important;\n}\nhtml {\n  box-sizing: border-box;\n}\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\nbody {\n  height: 100%;\n  wight: 100%;\n  margin-top: 300px;\n  font-family: 'San Francisco';\n}\n@media only screen and (max-width: 600px) {\n  body {\n    font-size: 8px;\n  }\n}\n.large-text {\n  font-weight: 400;\n  font-size: 3.75em;\n}\n.small-text {\n  cursor: pointer;\n  font-weight: 200;\n  font-size: 1.5em;\n}\n.medium-text {\n  font-weight: 400;\n  font-size: 2.25em;\n  display: flex;\n  cursor: pointer;\n  align-self: flex-end;\n}\n.medium-text2 {\n  font-weight: 400;\n  font-size: 2.25em;\n  display: flex;\n  align-self: flex-end;\n}\n.light-text {\n  font-weight: 100;\n  font-size: 2.25em;\n  display: flex;\n  align-self: flex-end;\n}\n.day {\n  display: flex;\n  align-self: flex-end;\n}\n.main-container {\n  background: #dd2e44;\n}\n.main-nav-bar {\n  background-color: #dd2e44;\n  color: #f2f2f2;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 20;\n}\n.gradient {\n  position: fixed;\n  z-index: 19;\n  top: 0;\n  height: 350px;\n  width: 100%;\n  background: linear-gradient(#dd2e44, #dd2e44 80%, transparent);\n}\n@media only screen and (max-width: 600px) {\n  .gradient {\n    height: 225px;\n  }\n}\n.style-nav {\n  margin-left: 20px;\n}\n.top-nav-tabs {\n  font-weight: 100;\n  font-size: 1.75em;\n  display: flex;\n  justify-content: space-around;\n}\n.top-nav-tabs a {\n  margin: 0;\n}\n.top-nav-tabs ul {\n  padding: 0;\n}\n.top-nav-tabs li {\n  margin: 0 60px 0 60px;\n  cursor: pointer;\n}\n@media only screen and (max-width: 900px) {\n  .top-nav-tabs li {\n    margin: 0 30px 0 30px;\n  }\n}\n@media only screen and (max-width: 650px) {\n  .top-nav-tabs li {\n    margin: 0 18px 0 18px;\n  }\n}\n/*home-view*/\n.home-container {\n  width: 100%;\n  background: #dd2e44;\n}\n.nav-filter {\n  text-align: center;\n}\n.nav-bottom {\n  margin: 25px auto 0 auto;\n  max-width: 600px;\n  display: flex;\n  align-items: flex-end;\n  flex-direction: row;\n  justify-content: space-around;\n  line-height: 50px;\n}\n.location-filter {\n  background: transparent;\n  border: none;\n  font-color: #f2f2f2;\n  font-weight: 400;\n  font-size: 2.5em;\n  text-align: center;\n  padding-right: 0;\n  margin: 0;\n  height: 50px;\n}\n.location-filter:focus {\n  outline: none;\n}\n.cat-selector {\n  white-space: none;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  width: 20px;\n  cursor: pointer;\n}\n.cat-option {\n  color: inherit;\n  border: none;\n  background-color: transparent;\n  outline: none;\n}\n.day-options {\n  display: flex;\n  cursor: pointer;\n}\n.day-option {\n  color: #dd2e44;\n  border: #58595b;\n  border-radius: 5px;\n  margin: 2px;\n  background-color: #f2f2f2;\n  outline: none;\n  height: 30px;\n  width: 30px;\n  font-size: 18px;\n  cursor: pointer;\n}\nh2 {\n  margin: 0 auto;\n}\nh4 {\n  margin: 0 auto;\n}\nli {\n  display: inline-block;\n}\na {\n  text-decoration: none;\n  color: #f2f2f2;\n}\n.cat-title {\n  display: flex;\n  color: #f2f2f2;\n  font-weight: 400;\n  font-size: 2.25em;\n}\n.cat-title span {\n  margin: auto;\n}\n.deal {\n  min-width: 220px;\n  height: 300px;\n  margin: 25px;\n  background: #f2f2f2;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  font-color: #58595b;\n  font-size: 24px;\n  font-weight: ultralight;\n}\n.deal:hover {\n  animation-fill-mode: forwards;\n  animation-name: fade-out;\n  animation-duration: 0.6s;\n  cursor: pointer;\n}\n.main-deals-container {\n  margin-top: 325px;\n}\n@media only screen and (max-width: 600px) {\n  .main-deals-container {\n    margin-top: -90px;\n  }\n}\n.deal-desc {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: center;\n  width: 220px;\n  height: 300px;\n  color: #f2f2f2;\n  z-index: 20;\n}\n.deal-desc:hover {\n  animation-fill-mode: forwards;\n  animation-name: fade-in;\n  animation-duration: 0.6s;\n  cursor: pointer;\n}\n.deal-header {\n  text-align: center;\n  width: 100%;\n  height: 20%;\n  margin-top: 5%;\n}\n.deal-pic {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.deal-footer {\n  text-align: center;\n  width: 100%;\n  height: 20%;\n  margin: auto;\n  margin-bottom: 3%;\n}\n.cat-container {\n  overflow: hidden;\n}\n.deals-container {\n  display: flex;\n  flex-direction: row;\n  overflow-x: auto;\n  overflow-y: hidden;\n  margin-bottom: -20px;\n  padding-bottom: 20px;\n}\n/*maps-view*/\n.modal {\n  display: none;\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  top: 0;\n  width: 60%;\n  height: 80%;\n  overflow: auto;\n  overflow-x: hidden;\n  background-color: #f2f2f2;\n  text-align: center;\n  margin: 5% 20%;\n  border-radius: 10px;\n  box-shadow: 0 1px 4px rgba(0,0,0,0.3), 0 0 40px rgba(0,0,0,0.1) inset;\n}\n@media only screen and (max-width: 600px) {\n  .modal {\n    margin: 0;\n    width: 100%;\n    height: 100%;\n  }\n}\n#modal-curtain {\n  display: none;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  background-color: rgba(50,50,50,0.92);\n  position: absolute;\n  z-index: 99;\n}\n#promodal-curtain {\n  display: none;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  background-color: rgba(50,50,50,0.92);\n  position: absolute;\n  z-index: 99;\n}\n.svg-wrapper {\n  overflow: hidden;\n}\n.svgDisplay {\n  display: flex;\n  flex-direction: row;\n  overflow-y: hidden;\n  overflow-x: auto;\n  margin-bottom: -20px;\n  padding-bottom: 20px;\n}\n.svgDisplay svg {\n  min-width: 75px;\n}\n.modal-content {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n}\n.data-entry {\n  text-align: center;\n}\n.deal-entry {\n  width: 100%;\n  margin: auto;\n}\n.deal-title-input {\n  border-radius: 15px;\n  height: 30px;\n  border: none;\n  margin: 5px;\n  width: 30%;\n}\n.day-wrapper {\n  display: flex;\n  justify-content: space-between;\n  width: 30%;\n  margin: 5px 35%;\n}\n.day-box {\n  color: #f2f2f2;\n  background-color: #dd2e44;\n  border-radius: 3px;\n  height: 23px;\n  width: 23px;\n}\n.deal-textarea {\n  width: 60%;\n  border-radius: 15px;\n  margin: 5px;\n  border: none;\n}\n.bus-entry {\n  width: 100%;\n}\n.bus-name-input {\n  border-radius: 15px;\n  height: 30px;\n  border: none;\n  margin: 5px;\n  width: 50%;\n}\n#close {\n  position: absolute;\n  top: 15px;\n  right: 35px;\n  color: #bbb;\n  font-weight: 400;\n  font-size: 2.5em;\n  transition: 0.3s;\n}\n#close:hover,\n#close:focus {\n  color: #58595b;\n  text-decoration: none;\n  cursor: pointer;\n}\n.signup-form {\n  width: 400px;\n  margin: auto;\n  font-weight: 100;\n  font-size: 1.875em;\n}\n.signup-inputs {\n  border: 0;\n  border-radius: 30px;\n  color: #58595b;\n  width: 400px;\n  height: 60px;\n  margin-bottom: 10px;\n  text-align: center;\n}\n.signup-inputs:focus {\n  outline: none;\n}\n.signup-button {\n  border: 0;\n  border-radius: 30px;\n  background: #f2f2f2;\n  color: #dd2e44;\n  width: 400px;\n  height: 60px;\n  text-align: center;\n  font-weight: 100;\n  font-size: 1.5em;\n}\n.signup-button:focus {\n  outline: none;\n}\n.password-match-error {\n  font-weight: 200;\n  font-size: 1.25em;\n  color: #f2f2f2;\n  text-align: center;\n  margin-bottom: 0;\n}\n.signup-header {\n  font-weight: 400;\n  font-size: 3.75em;\n  text-align: center;\n  color: #f2f2f2;\n}\n.signup-footer {\n  font-weight: 200;\n  font-size: 1.25em;\n  text-align: center;\n  color: #f2f2f2;\n  margin-top: 0;\n}\n.login-footer {\n  font-weight: 200;\n  font-size: 1.25em;\n  text-align: center;\n  color: #f2f2f2;\n  margin-top: 0;\n}\n.login-header {\n  font-weight: 400;\n  font-size: 3.75em;\n  text-align: center;\n  color: #f2f2f2;\n}\n.login-button {\n  border: 0;\n  border-radius: 30px;\n  background: #f2f2f2;\n  color: #dd2e44;\n  height: 60px;\n  width: 400px;\n  text-align: center;\n  font-weight: 100;\n  font-size: 1.5em;\n  margin-bottom: 10px;\n}\n.login-button:focus {\n  outline: none;\n}\n.login-form {\n  width: 400px;\n  margin: auto;\n  font-weight: 100;\n  font-size: 1.875em;\n}\n.login-inputs {\n  border: 0;\n  border-radius: 30px;\n  color: #58595b;\n  width: 400px;\n  height: 60px;\n  margin-bottom: 10px;\n  text-align: center;\n}\n.login-inputs:focus {\n  outline: none;\n}\n.options {\n  background-color: transparent;\n  font-weight: 400;\n  font-size: 1.1em;\n  border: 0;\n  cursor: pointer;\n}\n.options:focus {\n  outline: none;\n}\n.option {\n  font-weight: 100;\n  font-size: 1.875em;\n  color: #f2f2f2;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 10px;\n  padding-top: 0;\n}\n.alt-login {\n  margin: auto;\n  width: 400px;\n}\n#twitter {\n  background: #1da1f2;\n  color: #f2f2f2;\n}\n#fb {\n  background: #3a5795;\n  color: #f2f2f2;\n}\n.profileWrap {\n  text-align: center;\n}\n.profilePic {\n  height: 300px;\n  width: 200px;\n  border-radius: 15px 5px 30px 5px;\n}\n@-moz-keyframes fade-out {\n  from {\n    background-color: #f2f2f2;\n  }\n  to {\n    background-color: #58595b;\n  }\n}\n@-webkit-keyframes fade-out {\n  from {\n    background-color: #f2f2f2;\n  }\n  to {\n    background-color: #58595b;\n  }\n}\n@-o-keyframes fade-out {\n  from {\n    background-color: #f2f2f2;\n  }\n  to {\n    background-color: #58595b;\n  }\n}\n@keyframes fade-out {\n  from {\n    background-color: #f2f2f2;\n  }\n  to {\n    background-color: #58595b;\n  }\n}\n@-moz-keyframes fade-in {\n  from {\n    opacity: 0.2;\n  }\n  to {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes fade-in {\n  from {\n    opacity: 0.2;\n  }\n  to {\n    opacity: 1;\n  }\n}\n@-o-keyframes fade-in {\n  from {\n    opacity: 0.2;\n  }\n  to {\n    opacity: 1;\n  }\n}\n@keyframes fade-in {\n  from {\n    opacity: 0.2;\n  }\n  to {\n    opacity: 1;\n  }\n}\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n"],"sourceRoot":"/source/"}