angular.module('app', ['ui.router', 'satellizer', 'ngMap'])

    .config(function ($authProvider, $stateProvider, $urlRouterProvider, $locationProvider) {

        $authProvider.facebook({
            clientId: '1670205403245071'
        });

        $authProvider.google({
            clientId: '696255640250-ha91c7enlsravhptab5c63punfunlh8u.apps.googleusercontent.com'
        });

        $urlRouterProvider.otherwise("/");

        $stateProvider
            .state('home', {
                url: '/',
                controller: 'mainCtrl',
                templateUrl: 'partials/home.html'
            })
            .state('login', {
                url: '/login',
                templateUrl: 'partials/login.html',
                controller: 'loginCtrl',
                resolve: {
                    skipIfLoggedIn: skipIfLoggedIn
                }
            })
            .state('signup', {
                url: '/signup',
                templateUrl: 'partials/signup.html',
                controller: 'signupCtrl',
                resolve: {
                    skipIfLoggedIn: skipIfLoggedIn
                }
            })
            .state('logout', {
                url: '/logout',
                template: null,
                controller: 'logoutCtrl'
            })
            .state('profile', {
                url: '/profile',
                templateUrl: 'partials/profile.html',
                controller: 'profileCtrl',
                resolve: {
                    loginRequired: loginRequired
                }
            })
            .state('addStuff', {
                url: '/addstuff',
                templateUrl: 'partials/addStuff.html',
                controller: 'addStuff',
                resolve: {
                    loginRequired: loginRequired
                }
            })
            // .state('maps', {
            //     url: '/maps',
            //     templateUrl: 'partials/maps.html',
            //     controller: 'NavbarCtrl',
            //     controllerAs: 'vm'
            // });


        function skipIfLoggedIn($q, $auth) {
            var deferred = $q.defer();
            if ($auth.isAuthenticated()) {
                deferred.reject();
            } else {
                deferred.resolve();
            }
            return deferred.promise;
        }

        function loginRequired($q, $location, $auth) {
            var deferred = $q.defer();
            if ($auth.isAuthenticated()) {
                deferred.resolve();
            } else {
                $location.path('/login');
            }
            return deferred.promise;
        }

    });

angular.module('app')
    .controller('NavbarCtrl', function ($scope, $auth, NgMap, geoService) {

        var vm = this;


        vm.isAuthenticated = function () {
            return $auth.isAuthenticated();
        };

        // vm.types = "['establishment']";
        //
        // geoService.getCurrentPosition().then(function(latlng){
        //     geoService.reverseGeoCode(latlng).then(function(city){
        //         vm.city = city;
        //     });
        // });

        // vm.placeChanged = function () {
        //     vm.place = this.getPlace();
        //     vm.map.setCenter(vm.place.geometry.location);
        //     vm.marker = new google.maps.Marker({
        //         position: vm.place.geometry.location,
        //         map: vm.map,
        //         title: vm.place.name
        //     });
        //
        // };

        // vm.addBusiness = function () {
        //     geoService.newBusiness(vm.place, geoService.busPic).then(function (res) {
        //         $scope.addedBus = res;
        //     });
        // };
        //
        // NgMap.getMap().then(function (map) {
        //     geoService.getCurrentPosition().then(function (latlng) {
        //         vm.map = map;
        //         vm.map.setCenter(latlng);
        //         vm.map.setZoom(12);
        //     });
        // });

    });

angular.module('app')
    .factory('Account', function ($http) {
        return {
            getProfile: function () {
                return $http.get('/api/me');
            },
            updateProfile: function (profileData) {
                return $http.put('/api/me', profileData);
            }
        };
    });

angular.module('app')
    .service('addStuffService', function ($http, geoService) {

        var vm = this;

        // geoService.getCurrentPosition().then(function(latlng){
        //     geoService.reverseGeoCode(latlng).then(function(city){
        //         $scope.city = city;
        //         console.log(city);
        //     })
        // });
        //
        // geoService.geoCode('295 E 7800 S 84047').then(function(latlng){
        //     console.log(latlng);
        // });

        vm.addBus = function (addBus) {
            return geoService.geoCode(addBus.bus.address).then(function (lnglat) {
                var loc = {
                    type: "Point",
                    coordinates: lnglat
                };
                addBus.bus.loc = loc;
                addBus.deal.loc = loc;
                addBus.deal.address = addBus.bus.address;
                addBus.deal.day = [addBus.deal.day];
                return $http({
                    method: 'POST',
                    data: addBus,
                    url: '/api/bus'
                })
            });
        };

        vm.addDeal = function (deal) {
            //we need to add geolocation and address to this before it will save
            // the user will probably have those and we can grab them then
            return $http({
                method: 'POST',
                data: deal,
                url: '/api/deal'
            })
        };

    });

angular.module('app')
    .controller('addStuff', function ($scope, $auth, addStuffService) {

        $scope.isAuthenticated = function () {
            return $auth.isAuthenticated();
        };

        // geoService.getCurrentPosition().then(function(latlng){
        //     geoService.reverseGeoCode(latlng).then(function(city){
        //         $scope.city = city;
        //         console.log(city);
        //     })
        // });

        // geoService.geoCode('295 E 7800 S 84047').then(function(latlng){
        //     console.log(latlng);
        // });

        $scope.addBus = function (addBusData) {
            addStuffService.addBus(addBusData).then(function (addedStuff) {
                $scope.response = addedStuff;
            })
        };

        $scope.addDeal = function (deal) {
            addStuffService.addDeal(deal).then(function (addedStuff) {
                console.log('addStuff ctrl');
                $scope.response = addedStuff;
            })
        };

    });

angular.module('app')
.directive('catDirective', function(){

 return {
   templateUrl: '../partials/catTemplate.html',
   restrict: 'E',
   scope: {
     group:'=',
   },
   controller: 'mainCtrl',
   link: function(scope, element, attributes) {
     scope.toggle = function() {
       scope.show = !scope.show;
     };

   }
 };


});
angular.module('app')
    .service('geoService', function ($http, $q) {
        var busPic = null;
        var vm = this;

        function minuteToMs(min) {
            return min * 60000;
        }

        var options = {
            timeout: 4000,
            maximumAge: minuteToMs(60)
        };

        vm.getCurrentPosition = function () {
            var deferred = $q.defer();
            if (!navigator.geolocation) {
                deferred.reject('Geolocation not supported.');
            } else {
                navigator.geolocation.getCurrentPosition(
                    function (pos) {
                        var latlng = {lat: parseFloat(pos.coords.latitude), lng: parseFloat(pos.coords.longitude)};
                        deferred.resolve(latlng);
                    },
                    function (err) {
                        deferred.reject(err);
                    }, options);
            }
            return deferred.promise;
        };

        vm.reverseGeoCode = function (latlng) {
            var deferred = $q.defer();
            geocoder = new google.maps.Geocoder();
            geocoder.geocode({'location': latlng}, function (results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        for (var i = 0, len = results[1].address_components.length; i < len; i++) {
                            if (results[1].address_components[i].types.indexOf("locality") !== -1) {
                                return deferred.resolve(results[1].address_components[i].long_name ? results[1].address_components[i].long_name : results[1].address_components[i].short_name)
                            }
                        }
                    } else {
                        window.alert('No results found');
                    }
                } else {
                    deferred.reject(status);
                }
            });
            return deferred.promise;
        };

        vm.newBusiness = function (business, busPic) {
            var newBusiness = {
                address: business.formatted_address,
                phone: business.formatted_phone_number,
                loc: {
                    coordinates: [Number(business.geometry.location.lng()), Number(business.geometry.location.lat())]
                },
                busName: business.name,
                busHours: business.opening_hours.weekday_text,
                placeId: business.place_id,
                website: business.website,
                picture: busPic
            };
            return $http({
                method: 'POST',
                data: newBusiness,
                url: '/api/bus'
            });
        };

        vm.storeImage = function (imageData, fileName) {
          var imageExtension = imageData.split(';')[0].split('/');
          imageExtension = imageExtension[imageExtension.length - 1];

          var newImage = {
            imageName: fileName,
            imageBody: imageData,
            imageExtension: imageExtension,
            userEmail: 'jakecorry123@gmail.com'
          };

          return $http.post('/api/newimage', newImage);
        };

    });

angular.module('app')
    .controller('homeCtrl', function ($scope, $auth, geoService) {

        $scope.isAuthenticated = function () {
            return $auth.isAuthenticated();
        };

        // geoService.getCurrentPosition().then(function(latlng){
        //     geoService.reverseGeoCode(latlng).then(function(city){
        //         $scope.city = city;
        //         console.log(city);
        //     })
        // });

        // geoService.geoCode('295 E 7800 S 84047').then(function(latlng){
        //     console.log(latlng);
        // })

    });

angular.module('app')
    .controller('loginCtrl', function ($scope, $location, $auth) {

        $scope.login = function () {
            $auth.login($scope.user)
                .then(function () {
                    // toastr.success('You have successfully signed in!');
                    $location.path('/');
                })
                .catch(function (error) {
                    // toastr.error(error.data.message, error.status);
                });
        };

        $scope.authenticate = function (provider) {
            $auth.authenticate(provider)
                .then(function () {
                    // toastr.success('You have successfully signed in with ' + provider + '!');
                    $location.path('/');
                })
                .catch(function (error) {
                    if (error.error) {
                        // Popup error - invalid redirect_uri, pressed cancel button, etc.
                        // toastr.error(error.error);
                    } else if (error.data) {
                        // HTTP response error from server
                        // toastr.error(error.data.message, error.status);
                    } else {
                        // toastr.error(error);
                    }
                });
        };
    });

angular.module('app')
    .controller('logoutCtrl', function ($location, $auth) {
        if (!$auth.isAuthenticated()) {
            return;
        }
        $auth.logout()
            .then(function () {
                // toastr.info('You have been logged out');
                $location.path('/');
            });
    });

angular.module("app").controller("mainCtrl", function($scope) {
  $scope.deals = [1, 2, 3, 4, 5, 6]
  $scope.categories = ["Food", "Entertainment", "Sports", "Transportation"]
})
angular.module('app')
    .controller('ModalCtrl', function ($scope, $auth, NgMap, geoService) {

      var vm = this;

      vm.types = "['establishment']";

      geoService.getCurrentPosition().then(function(latlng){
          geoService.reverseGeoCode(latlng).then(function(city){
              vm.city = city;
          });
      });

      vm.placeChanged = function () {
          vm.place = this.getPlace();
          vm.map.setCenter(vm.place.geometry.location);
          vm.marker = new google.maps.Marker({
              position: vm.place.geometry.location,
              map: vm.map,
              title: vm.place.name
          });

      };

      vm.addBusiness = function () {
          geoService.newBusiness(vm.place, geoService.busPic).then(function (res) {
              $scope.addedBus = res;
          });
      };

      NgMap.getMap().then(function (map) {
          geoService.getCurrentPosition().then(function (latlng) {
              vm.map = map;
              vm.map.setCenter(latlng);
              vm.map.setZoom(12);
          });
      });

      //Modal controls//
      vm.expand = function() {
        var modal = document.getElementById('modal');
        modal.style.display = 'block';

      }

      vm.closeClick = function() {
        var modal = document.getElementById('modal');

        modal.style.display = 'none';
      };

});

angular.module('app')
.directive('dealDir', function(){
  return {
    retrict: 'E',
    templateUrl: '/partials/maps.html',
    controller: 'ModalCtrl',
    controllerAs: 'vm'

  }
})

angular.module('app')
    .controller('profileCtrl', function ($scope, $auth, Account) {
        $scope.getProfile = function () {
            Account.getProfile()
                .then(function (response) {
                    $scope.user = response.data;
                })
                .catch(function (response) {
                    // toastr.error(response.data.message, response.status);
                });
        };
        $scope.updateProfile = function () {
            Account.updateProfile($scope.user)
                .then(function () {
                    // toastr.success('Profile has been updated');
                })
                .catch(function (response) {
                    // toastr.error(response.data.message, response.status);
                });
        };
        $scope.link = function (provider) {
            $auth.link(provider)
                .then(function () {
                    // toastr.success('You have successfully linked a ' + provider + ' account');
                    $scope.getProfile();
                })
                .catch(function (response) {
                    // toastr.error(response.data.message, response.status);
                });
        };
        $scope.unlink = function (provider) {
            $auth.unlink(provider)
                .then(function () {
                    // toastr.info('You have unlinked a ' + provider + ' account');
                    $scope.getProfile();
                })
                .catch(function (response) {
                    // toastr.error(response.data ? response.data.message : 'Could not unlink ' + provider + ' account', response.status);
                });
        };

        $scope.getProfile();
    });

angular.module('app')
.directive('fileread', function (geoService) {
  return {
    restrict: 'A',
    link: function (scope, elem, attrs) {
      elem.bind("change", function (changeEvent) {

        var reader = new FileReader();
        reader.onload = function (loadEvent) {
          var fileread = loadEvent.target.result;

          var tempArray = elem[0].value.split('\\');
          var fileName = tempArray[tempArray.length - 1];
          geoService.storeImage(fileread, fileName)
          .then(function(result){
            geoService.busPic = result.data.Location;
          })
          .catch(function(err) {
            console.error(err);
          });
        };

        reader.readAsDataURL(changeEvent.target.files[0]);
      });
    }
  };
});

angular.module('app')
    .controller('signupCtrl', function ($scope, $location, $auth) {
        $scope.signup = function () {
            $auth.signup($scope.user)
                .then(function (response) {
                    $auth.setToken(response);
                    $location.path('/');
                    // toastr.info('You have successfully created a new account and have been signed-in');
                })
                .catch(function (response) {
                    // toastr.error(response.data.message);
                });
        };
    });

//# sourceMappingURL=maps/js.min.js.map
