{"version":3,"sources":["app.js","navbar.js","account.js","addStuff.js","catDirective.js","geoService.js","homeCtrl.js","loginCtrl.js","logoutCtrl.js","mainCtrl.js","modalCtrl.js","newDealDirective.js","profileCtrl.js","s3Directive.js","signupCtrl.js","svgService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"js.min.js","sourcesContent":["angular.module('app', ['ui.router', 'satellizer', 'ngMap'])\n\n    .config(function ($authProvider, $stateProvider, $urlRouterProvider, $locationProvider) {\n\n        $authProvider.facebook({\n            clientId: '1670205403245071'\n        });\n\n        $authProvider.google({\n            clientId: '696255640250-ha91c7enlsravhptab5c63punfunlh8u.apps.googleusercontent.com'\n        });\n\n        $urlRouterProvider.otherwise(\"/\");\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                controller: 'mainCtrl',\n                templateUrl: 'partials/home.html'\n            })\n            .state('login', {\n                url: '/login',\n                templateUrl: 'partials/login.html',\n                controller: 'loginCtrl',\n                resolve: {\n                    skipIfLoggedIn: skipIfLoggedIn\n                }\n            })\n            .state('signup', {\n                url: '/signup',\n                templateUrl: 'partials/signup.html',\n                controller: 'signupCtrl',\n                resolve: {\n                    skipIfLoggedIn: skipIfLoggedIn\n                }\n            })\n            .state('logout', {\n                url: '/logout',\n                template: null,\n                controller: 'logoutCtrl'\n            })\n            .state('profile', {\n                url: '/profile',\n                templateUrl: 'partials/profile.html',\n                controller: 'profileCtrl',\n                resolve: {\n                    loginRequired: loginRequired\n                }\n            })\n            .state('addStuff', {\n                url: '/addstuff',\n                templateUrl: 'partials/addStuff.html',\n                controller: 'addStuff',\n                resolve: {\n                    loginRequired: loginRequired\n                }\n            })\n            // .state('maps', {\n            //     url: '/maps',\n            //     templateUrl: 'partials/maps.html',\n            //     controller: 'NavbarCtrl',\n            //     controllerAs: 'vm'\n            // });\n\n\n        function skipIfLoggedIn($q, $auth) {\n            var deferred = $q.defer();\n            if ($auth.isAuthenticated()) {\n                deferred.reject();\n            } else {\n                deferred.resolve();\n            }\n            return deferred.promise;\n        }\n\n        function loginRequired($q, $location, $auth) {\n            var deferred = $q.defer();\n            if ($auth.isAuthenticated()) {\n                deferred.resolve();\n            } else {\n                $location.path('/login');\n            }\n            return deferred.promise;\n        }\n\n    });\n","angular.module('app')\n    .controller('NavbarCtrl', function ($scope, $auth, NgMap, geoService, $location, svgService) {\n\n        var vm = this;\n\n        vm.hideDealBar = function () {\n            return !(/maps|login|signup/.test($location.url()))\n        };\n\n        vm.isAuthenticated = function () {\n            return $auth.isAuthenticated();\n        };\n\n        vm.types = \"['establishment']\";\n\n        geoService.getCurrentPosition().then(function (latlng) {\n            geoService.reverseGeoCode(latlng).then(function (city) {\n                vm.city = city;\n            })\n        });\n\n        function svgs() {\n            svgService.getSvg().then(function (res) {\n                vm.svgs = res;\n            })\n        }\n\n        svgs();\n\n        vm.days = [\n            {\n                display: 'Sunday',\n                val: function () {\n                    return {day: 0};\n                }\n            },\n            {\n                display: 'Monday',\n                val: function () {\n                    return {day: 1};\n                }\n            },\n            {\n                display: 'Tuesday',\n                val: function () {\n                    return {day: 2};\n                }\n            },\n            {\n                display: 'Wednesday',\n                val: function () {\n                    return {day: 3};\n                }\n            },\n            {\n                display: 'Thursday',\n                val: function () {\n                    return {day: 4};\n                }\n            },\n            {\n                display: 'Friday',\n                val: function () {\n                    return {day: 5};\n                }\n            },\n            {\n                display: 'Saturday',\n                val: function () {\n                    return {day: 6};\n                }\n            }\n        ];\n\n        var date = new Date();\n        vm.dayNum = date.getDay();\n        vm.selectedDay = vm.days[vm.dayNum];\n\n        vm.placeChanged = function () {\n            vm.place = this.getPlace();\n            vm.map.setCenter(vm.place.geometry.location);\n            vm.marker = new google.maps.Marker({\n                position: vm.place.geometry.location,\n                map: vm.map,\n                title: vm.place.name\n            });\n        };\n\n        vm.addBusiness = function () {\n            geoService.newBusiness(vm.place).then(function (res) {\n                $scope.addedBus = res;\n            });\n        };\n\n        NgMap.getMap().then(function (map) {\n            geoService.getCurrentPosition().then(function (latlng) {\n                vm.map = map;\n                vm.map.setCenter(latlng);\n                vm.map.setZoom(12);\n            });\n        });\n\n    });\n","angular.module('app')\n    .factory('Account', function ($http) {\n        return {\n            getProfile: function () {\n                return $http.get('/api/me');\n            },\n            updateProfile: function (profileData) {\n                return $http.put('/api/me', profileData);\n            }\n        };\n    });\n","angular.module('app')\n    .controller('addStuff', function ($scope, $auth, addStuffService) {\n\n        $scope.isAuthenticated = function () {\n            return $auth.isAuthenticated();\n        };\n\n        // geoService.getCurrentPosition().then(function(latlng){\n        //     geoService.reverseGeoCode(latlng).then(function(city){\n        //         $scope.city = city;\n        //         console.log(city);\n        //     })\n        // });\n\n        // geoService.geoCode('295 E 7800 S 84047').then(function(latlng){\n        //     console.log(latlng);\n        // });\n\n        $scope.addBus = function (addBusData) {\n            addStuffService.addBus(addBusData).then(function (addedStuff) {\n                $scope.response = addedStuff;\n            })\n        };\n\n        $scope.addDeal = function (deal) {\n            addStuffService.addDeal(deal).then(function (addedStuff) {\n                console.log('addStuff ctrl');\n                $scope.response = addedStuff;\n            })\n        };\n\n    });\n","angular.module('app')\n.directive('catDirective', function(){\n\n return {\n   templateUrl: '../partials/catTemplate.html',\n   restrict: 'E',\n   scope: {\n     group:'=',\n   },\n   controller: 'mainCtrl',\n   link: function(scope, element, attributes) {\n     scope.toggle = function() {\n       scope.show = !scope.show;\n     };\n\n   }\n };\n\n\n});","angular.module('app')\n    .service('geoService', function ($http, $q) {\n        var busPic = null;\n        var vm = this;\n\n        function minuteToMs(min) {\n            return min * 60000;\n        }\n\n        var options = {\n            timeout: 4000,\n            maximumAge: minuteToMs(60)\n        };\n\n        vm.getCurrentPosition = function () {\n            var deferred = $q.defer();\n            if (!navigator.geolocation) {\n                deferred.reject('Geolocation not supported.');\n            } else {\n                navigator.geolocation.getCurrentPosition(\n                    function (pos) {\n                        var latlng = {lat: parseFloat(pos.coords.latitude), lng: parseFloat(pos.coords.longitude)};\n                        deferred.resolve(latlng);\n                    },\n                    function (err) {\n                        deferred.reject(err);\n                    }, options);\n            }\n            return deferred.promise;\n        };\n\n        vm.reverseGeoCode = function (latlng) {\n            var deferred = $q.defer();\n            var geocoder = new google.maps.Geocoder();\n            geocoder.geocode({'location': latlng}, function (results, status) {\n                if (status === google.maps.GeocoderStatus.OK) {\n                    if (results[1]) {\n                        for (var i = 0, len = results[1].address_components.length; i < len; i++) {\n                            if (results[1].address_components[i].types.indexOf(\"locality\") !== -1) {\n                                return deferred.resolve(results[1].address_components[i].long_name ? results[1].address_components[i].long_name : results[1].address_components[i].short_name)\n                            }\n                        }\n                    } else {\n                        window.alert('No results found');\n                    }\n                } else {\n                    deferred.reject(status);\n                }\n            });\n            return deferred.promise;\n        };\n\n        vm.newBusiness = function (business, busPic) {\n            var newBusiness = {\n                address: business.formatted_address,\n                phone: business.formatted_phone_number,\n                loc: {\n                    coordinates: [Number(business.geometry.location.lng()), Number(business.geometry.location.lat())]\n                },\n                busName: business.name,\n                busHours: business.opening_hours.weekday_text,\n                placeId: business.place_id,\n                website: business.website,\n                picture: busPic\n            };\n            return $http({\n                method: 'POST',\n                data: newBusiness,\n                url: '/api/bus'\n            });\n        };\n\n        vm.storeImage = function (imageData, fileName) {\n          var imageExtension = imageData.split(';')[0].split('/');\n          imageExtension = imageExtension[imageExtension.length - 1];\n\n          var newImage = {\n            imageName: fileName,\n            imageBody: imageData,\n            imageExtension: imageExtension,\n            userEmail: 'jakecorry123@gmail.com'\n          };\n\n          return $http.post('/api/newimage', newImage);\n        };\n\n    });\n","angular.module('app')\n    .controller('homeCtrl', function ($scope, $auth, geoService) {\n\n        $scope.isAuthenticated = function () {\n            return $auth.isAuthenticated();\n        };\n\n        // geoService.getCurrentPosition().then(function(latlng){\n        //     geoService.reverseGeoCode(latlng).then(function(city){\n        //         $scope.city = city;\n        //         console.log(city);\n        //     })\n        // });\n\n        // geoService.geoCode('295 E 7800 S 84047').then(function(latlng){\n        //     console.log(latlng);\n        // })\n\n    });\n","angular.module('app')\n    .controller('loginCtrl', function ($scope, $location, $auth) {\n\n        $scope.login = function () {\n            $auth.login($scope.user)\n                .then(function () {\n                    // toastr.success('You have successfully signed in!');\n                    $location.path('/');\n                })\n                .catch(function (error) {\n                    // toastr.error(error.data.message, error.status);\n                });\n        };\n\n        $scope.authenticate = function (provider) {\n            $auth.authenticate(provider)\n                .then(function () {\n                    // toastr.success('You have successfully signed in with ' + provider + '!');\n                    $location.path('/');\n                })\n                .catch(function (error) {\n                    if (error.error) {\n                        // Popup error - invalid redirect_uri, pressed cancel button, etc.\n                        // toastr.error(error.error);\n                    } else if (error.data) {\n                        // HTTP response error from server\n                        // toastr.error(error.data.message, error.status);\n                    } else {\n                        // toastr.error(error);\n                    }\n                });\n        };\n    });\n","angular.module('app')\n    .controller('logoutCtrl', function ($location, $auth) {\n        if (!$auth.isAuthenticated()) {\n            return;\n        }\n        $auth.logout()\n            .then(function () {\n                // toastr.info('You have been logged out');\n                $location.path('/');\n            });\n    });\n","angular.module(\"app\").controller(\"mainCtrl\", function($scope) {\n  $scope.deals = [1, 2, 3, 4, 5, 6]\n  $scope.categories = [\"Food\", \"Entertainment\", \"Sports\", \"Transportation\"]\n})","angular.module('app')\n    .controller('ModalCtrl', function ($scope, $auth, NgMap, geoService) {\n\n      var vm = this;\n\n      vm.types = \"['establishment']\";\n\n      geoService.getCurrentPosition().then(function(latlng){\n          geoService.reverseGeoCode(latlng).then(function(city){\n              vm.city = city;\n          });\n      });\n\n      vm.placeChanged = function () {\n          vm.place = this.getPlace();\n          vm.map.setCenter(vm.place.geometry.location);\n          vm.marker = new google.maps.Marker({\n              position: vm.place.geometry.location,\n              map: vm.map,\n              title: vm.place.name\n          });\n\n      };\n\n      vm.addBusiness = function () {\n          geoService.newBusiness(vm.place, geoService.busPic).then(function (res) {\n              $scope.addedBus = res;\n          });\n      };\n\n      NgMap.getMap().then(function (map) {\n          geoService.getCurrentPosition().then(function (latlng) {\n              vm.map = map;\n              vm.map.setCenter(latlng);\n              vm.map.setZoom(12);\n          });\n      });\n\n      //Modal controls//\n      vm.expand = function() {\n        var modal = document.getElementById('modal');\n        modal.style.display = 'block';\n\n      }\n\n      vm.closeClick = function() {\n        var modal = document.getElementById('modal');\n\n        modal.style.display = 'none';\n      };\n\n});\n","angular.module('app')\n.directive('dealDir', function(){\n  return {\n    retrict: 'E',\n    templateUrl: '/partials/maps.html',\n    controller: 'ModalCtrl',\n    controllerAs: 'vm'\n\n  }\n})\n","angular.module('app')\n    .controller('profileCtrl', function ($scope, $auth, Account) {\n        $scope.getProfile = function () {\n            Account.getProfile()\n                .then(function (response) {\n                    $scope.user = response.data;\n                })\n                .catch(function (response) {\n                    // toastr.error(response.data.message, response.status);\n                });\n        };\n        $scope.updateProfile = function () {\n            Account.updateProfile($scope.user)\n                .then(function () {\n                    // toastr.success('Profile has been updated');\n                })\n                .catch(function (response) {\n                    // toastr.error(response.data.message, response.status);\n                });\n        };\n        $scope.link = function (provider) {\n            $auth.link(provider)\n                .then(function () {\n                    // toastr.success('You have successfully linked a ' + provider + ' account');\n                    $scope.getProfile();\n                })\n                .catch(function (response) {\n                    // toastr.error(response.data.message, response.status);\n                });\n        };\n        $scope.unlink = function (provider) {\n            $auth.unlink(provider)\n                .then(function () {\n                    // toastr.info('You have unlinked a ' + provider + ' account');\n                    $scope.getProfile();\n                })\n                .catch(function (response) {\n                    // toastr.error(response.data ? response.data.message : 'Could not unlink ' + provider + ' account', response.status);\n                });\n        };\n\n        $scope.getProfile();\n    });\n","angular.module('app')\n.directive('fileread', function (geoService) {\n  return {\n    restrict: 'A',\n    link: function (scope, elem, attrs) {\n      elem.bind(\"change\", function (changeEvent) {\n\n        var reader = new FileReader();\n        reader.onload = function (loadEvent) {\n          var fileread = loadEvent.target.result;\n\n          var tempArray = elem[0].value.split('\\\\');\n          var fileName = tempArray[tempArray.length - 1];\n          geoService.storeImage(fileread, fileName)\n          .then(function(result){\n            geoService.busPic = result.data.Location;\n          })\n          .catch(function(err) {\n            console.error(err);\n          });\n        };\n\n        reader.readAsDataURL(changeEvent.target.files[0]);\n      });\n    }\n  };\n});\n","angular.module('app')\n    .controller('signupCtrl', function ($scope, $location, $auth) {\n        $scope.signup = function () {\n            if ($scope.user.password == $scope.confirmPassword) {\n            $auth.signup($scope.user)\n                .then(function (response) {\n                    $auth.setToken(response);\n                    $location.path('/');\n                    // toastr.info('You have successfully created a new account and have been signed-in');\n                })\n                .catch(function (response) {\n                    // toastr.error(response.data.message);\n                });\n        } else {\n            $scope.message = \"*Passwords don't match, please try again\"\n        }\n    }\n    });\n","angular.module('app')\n    .service('svgService', function ($q) {\n\n// startinject\nvar svg = [\"sprite.svg#icon-airplane\",\n\"sprite.svg#icon-beer\",\n\"sprite.svg#icon-birthday\",\n\"sprite.svg#icon-bowling\",\n\"sprite.svg#icon-burger\",\n\"sprite.svg#icon-cake\",\n\"sprite.svg#icon-camera\",\n\"sprite.svg#icon-chicken\",\n\"sprite.svg#icon-christmas\",\n\"sprite.svg#icon-couple\",\n\"sprite.svg#icon-dancing\",\n\"sprite.svg#icon-donut\",\n\"sprite.svg#icon-easel\",\n\"sprite.svg#icon-egg\",\n\"sprite.svg#icon-family\",\n\"sprite.svg#icon-fish\",\n\"sprite.svg#icon-flowers\",\n\"sprite.svg#icon-gun\",\n\"sprite.svg#icon-haircut\",\n\"sprite.svg#icon-icecream\",\n\"sprite.svg#icon-kebab\",\n\"sprite.svg#icon-microphone\",\n\"sprite.svg#icon-muscle\",\n\"sprite.svg#icon-nails\",\n\"sprite.svg#icon-pho\",\n\"sprite.svg#icon-pizza\",\n\"sprite.svg#icon-pumpkin\",\n\"sprite.svg#icon-sax\",\n\"sprite.svg#icon-spaghetti\",\n\"sprite.svg#icon-sushi\",\n\"sprite.svg#icon-theater\",\n\"sprite.svg#icon-tiger\",\n\"sprite.svg#icon-train\"];\n// endinject\n\n        this.getSvg = function () {\n            var deferred = $q.defer();\n            deferred.resolve(svg);\n            return deferred.promise;\n        }\n\n    });\n"],"sourceRoot":"/source/"}